<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:batch-int="http://www.springframework.org/schema/batch-integration"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/batch-integration http://www.springframework.org/schema/batch-integration/spring-batch-integration.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

    <import resource="classpath:partitioner/job-context.xml"/>
    
    <batch:job id="partitionJob" restartable="true">
		<batch:step id="partitionStep">
			<!-- 定义分区的Step，指定分区策略 -->
			<batch:partition step="partitionReadWriteDB" partitioner="partitionerStrategy">
				<!-- 定义分区个数以taskExecutor：多线程任务执行器 -->
				<batch:handler grid-size="3" task-executor="taskExecutor"/>
			</batch:partition>
		</batch:step>
	</batch:job>
	
	<!-- 读写操作Step -->
    <batch:step id="partitionReadWriteDB">
		<tasklet>
			<chunk reader="mybatisPagingReader" writer="mybatisWriter"  processor="myProcessor" commit-interval="100"/>
			 <!-- 定义监听器 -->
			 <listeners>
                  <listener ref="partitionItemReadListener"></listener>
             </listeners>
		</tasklet>
	</batch:step>
	
    <!-- 定义分区策略 -->
	<bean id="partitionerStrategy" 
	    class="com.yucheng.cmis.batch.partitioner.partitioning.DBWithAutoIncrementIDPartitStrategy">
		<property name="table" value="t_credit"/>
		<property name="column" value="ID"/>
        <property name="dataSource" ref="dataSource"/>
	</bean>
	
	
	<!-- 读数据  分页-->
    <bean id="mybatisPagingReader" class="org.mybatis.spring.batch.MyBatisPagingItemReader" 
	    p:sqlSessionFactory-ref="sqlSessionFactory"
	    p:parameterValues-ref="datesParameters"
	    p:queryId="TCreditMapper.selectPagingWhere"
	    p:pageSize="100"
	    scope="step"/>
	    
	<!-- 传参 -->
	<util:map id="datesParameters" key-type="java.lang.String" scope="step">
	 <!-- _minRecord和_maxRecord参数是在分区策略中定义的-->
	  <entry key="idMin"  value="#{stepExecutionContext[_minRecord]}"/>
	  <entry key="idMax"  value="#{stepExecutionContext[_maxRecord]}"/>
	</util:map>
	
    <!-- 处理数据，空方法 -->
    <bean id="myProcessor" scope="step"
        class="com.yucheng.cmis.batch.mybatis.processor.MyProcessor">
    </bean>
    
     <!-- 写数据库 -->
    <bean id="mybatisWriter" class="org.mybatis.spring.batch.MyBatisBatchItemWriter">
    	<!-- 数据为空时不校验 -->
    	<property name="assertUpdates" value="false"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
  		<property name="statementId" value="com.yucheng.cmis.batch.mybatis.mapper.TDestcreditMapper.insert" />
	</bean>
	
	<!-- 加载mybatis配置文件 -->	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSource" />
	    <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />
	</bean>
	

	<!-- 定义多线程任务执行器 -->
	<bean id="taskExecutor"
		class="org.springframework.core.task.SimpleAsyncTaskExecutor">
		<property name="concurrencyLimit" value="5"/>
	</bean>
	
    <bean id="partitionItemReadListener"
		class="com.yucheng.cmis.batch.partitioner.partitioning.PartitionStepExecutionListener">
	</bean>
</beans>